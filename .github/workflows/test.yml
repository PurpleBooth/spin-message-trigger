name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
    - name: Install Targets
      run: rustup target install wasm32-unknown-unknown && rustup target install wasm32-wasi
    - name: Run tests
      run: cargo test --verbose
      
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - uses: fxwiegand/apply-clippy-lints@v1.0.4
      
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - name: Check formatting of Rust code with rustfmt
        uses: actions-rust-lang/rustfmt@v1.1.0
  
  build:
    needs: 
      - test
      - clippy
      - fmt
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { target: "x86_64-unknown-linux-gnu", os: "ubuntu-latest", arch: "amd64", extension: "" }
          - { target: "x86_64-apple-darwin", os: "macos-latest", arch: "amd64", extension: "" }
          - { target: "aarch64-apple-darwin", os: "macos-latest", arch: "aarch64", extension: "" }
          - { target: "x86_64-pc-windows-msvc", os: "windows-latest", arch: "amd64", extension: ".exe" }

    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2

    - name: Build
      run: cargo build --verbose --bin trigger-message --release



