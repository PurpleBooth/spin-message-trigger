package leeorr:spin-message-trigger@0.2.0;

interface spin-message-types {
    record internal-message {
        message: list<u8>,
        subject: string,
        broker: string,
        response-subject: option<string>
    }

    record internal-output-message {
        message: list<u8>,
        subject: option<string>,
        broker: option<string>,
        response-subject: option<string>
    }

    variant outcome {
        publish(list<internal-output-message>),
        error(string)
    }
}

world spin-message-trigger {
    use spin-message-types.{internal-message, internal-output-message, outcome};
    

    import config: interface {
        get-config: func(key: string) -> result<string, error>;

        variant error {
            provider(string),
            invalid-key(string),
            invalid-schema(string),
            other(string),
        }
    }
    
    export guest: interface {
        use spin-message-types.{internal-message, internal-output-message, outcome};
        handle-message: func(message: internal-message) -> outcome;
    }
}
